{
  "hash": "437fa09d9a0d0f5ba27ea181ed861fdc",
  "result": {
    "markdown": "---\ntitle: summarize_by_time\n---\n\n\n\n```python\nsummarize_by_time(\n    data,\n    date_column,\n    value_column,\n    freq='D',\n    agg_func='sum',\n    wide_format=False,\n    fillna=0,\n    engine='pandas',\n)\n```\n\nSummarize a DataFrame or GroupBy object by time.\n\nThe `summarize_by_time` function aggregates data by a specified time period\nand one or more numeric columns, allowing for grouping and customization of\nthe time-based aggregation.\n\n## Parameters {.doc-section .doc-section-parameters}\n\n| Name         | Type                                                     | Description| Default    |\n|--------------|----------------------------------------------------------||------------|\n| data         | pd.DataFrame or pd.core.groupby.generic.DataFrameGroupBy | A pandas DataFrame or a pandas GroupBy object. This is the data that you want to summarize by time| _required_ |\n| date_column  | str                                                      | The name of the column in the data frame that contains the dates or timestamps to be aggregated by. This column must be of type datetime| _required_ |\n| value_column | str or list                                              | The `value_column` parameter is the name of one or more columns in the DataFrame that you want to aggregate by. It can be either a string representing a single column name, or a list of strings representing multiple column names| _required_ |\n| freq         | str                                                      | The `freq` parameter specifies the frequency at which the data should be aggregated. It accepts a string representing a pandas frequency offset, such as \"D\" for daily or \"MS\" for month start. The default value is \"D\", which means the data will be aggregated on a daily basis. Some common frequency aliases include:  - S: secondly frequency - min: minute frequency - H: hourly frequency - D: daily frequency - W: weekly frequency - M: month end frequency - MS: month start frequency - Q: quarter end frequency - QS: quarter start frequency - Y: year end frequency - YS: year start frequency                                                                                                                                                                                                                                                                                                                                                                                                                                                                               | `'D'`      |\n| agg_func     | list                                                     | The `agg_func` parameter is used to specify one or more aggregating functions to apply to the value column(s) during the summarization process. It can be a single function or a list of functions. The default value is `\"sum\"`, which represents the sum function. Some common aggregating functions include:  - \"sum\": Sum of values - \"mean\": Mean of values - \"median\": Median of values - \"min\": Minimum of values - \"max\": Maximum of values - \"std\": Standard deviation of values - \"var\": Variance of values - \"first\": First value in group - \"last\": Last value in group - \"count\": Count of values - \"nunique\": Number of unique values - \"corr\": Correlation between values  Pandas Engine Only: Custom `lambda` aggregating functions can be used too. Here are several common examples:  - (\"q25\", lambda x: x.quantile(0.25)): 25th percentile of values - (\"q75\", lambda x: x.quantile(0.75)): 75th percentile of values - (\"iqr\", lambda x: x.quantile(0.75) - x.quantile(0.25)): Interquartile range of values - (\"range\", lambda x: x.max() - x.min()): Range of values | `'sum'`    |\n| wide_format  | bool                                                     | A boolean parameter that determines whether the output should be in \"wide\" or \"long\" format. If set to `True`, the output will be in wide format, where each group is represented by a separate column. If set to False, the output will be in long format, where each group is represented by a separate row. The default value is `False`| `False`    |\n| fillna       | int                                                      | The `fillna` parameter is used to specify the value to fill missing data with. By default, it is set to 0. If you want to keep missing values as NaN, you can use `np.nan` as the value for `fillna`| `0`        |\n| engine       | str                                                      | The `engine` parameter is used to specify the engine to use for summarizing the data. It can be either \"pandas\" or \"polars\".  - The default value is \"pandas\".  - When \"polars\", the function will internally use the `polars` library   for summarizing the data. This can be faster than using \"pandas\" for   large datasets.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             | `'pandas'` |\n\n## Returns {.doc-section .doc-section-returns}\n\n| Name   | Type         | Description                                    |\n|--------|--------------|------------------------------------------------|\n|        | pd.DataFrame | A Pandas DataFrame that is summarized by time. |\n\n## Examples {.doc-section .doc-section-examples}\n\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pytimetk as tk\nimport pandas as pd\n\ndf = tk.load_dataset('bike_sales_sample', parse_dates = ['order_date'])\n\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>order_id</th>\n      <th>order_line</th>\n      <th>order_date</th>\n      <th>quantity</th>\n      <th>price</th>\n      <th>total_price</th>\n      <th>model</th>\n      <th>category_1</th>\n      <th>category_2</th>\n      <th>frame_material</th>\n      <th>bikeshop_name</th>\n      <th>city</th>\n      <th>state</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>2011-01-07</td>\n      <td>1</td>\n      <td>6070</td>\n      <td>6070</td>\n      <td>Jekyll Carbon 2</td>\n      <td>Mountain</td>\n      <td>Over Mountain</td>\n      <td>Carbon</td>\n      <td>Ithaca Mountain Climbers</td>\n      <td>Ithaca</td>\n      <td>NY</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2</td>\n      <td>2011-01-07</td>\n      <td>1</td>\n      <td>5970</td>\n      <td>5970</td>\n      <td>Trigger Carbon 2</td>\n      <td>Mountain</td>\n      <td>Over Mountain</td>\n      <td>Carbon</td>\n      <td>Ithaca Mountain Climbers</td>\n      <td>Ithaca</td>\n      <td>NY</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>1</td>\n      <td>2011-01-10</td>\n      <td>1</td>\n      <td>2770</td>\n      <td>2770</td>\n      <td>Beast of the East 1</td>\n      <td>Mountain</td>\n      <td>Trail</td>\n      <td>Aluminum</td>\n      <td>Kansas City 29ers</td>\n      <td>Kansas City</td>\n      <td>KS</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>2</td>\n      <td>2011-01-10</td>\n      <td>1</td>\n      <td>5970</td>\n      <td>5970</td>\n      <td>Trigger Carbon 2</td>\n      <td>Mountain</td>\n      <td>Over Mountain</td>\n      <td>Carbon</td>\n      <td>Kansas City 29ers</td>\n      <td>Kansas City</td>\n      <td>KS</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3</td>\n      <td>1</td>\n      <td>2011-01-10</td>\n      <td>1</td>\n      <td>10660</td>\n      <td>10660</td>\n      <td>Supersix Evo Hi-Mod Team</td>\n      <td>Road</td>\n      <td>Elite Road</td>\n      <td>Carbon</td>\n      <td>Louisville Race Equipment</td>\n      <td>Louisville</td>\n      <td>KY</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2461</th>\n      <td>321</td>\n      <td>3</td>\n      <td>2011-12-22</td>\n      <td>1</td>\n      <td>1410</td>\n      <td>1410</td>\n      <td>CAAD8 105</td>\n      <td>Road</td>\n      <td>Elite Road</td>\n      <td>Aluminum</td>\n      <td>Miami Race Equipment</td>\n      <td>Miami</td>\n      <td>FL</td>\n    </tr>\n    <tr>\n      <th>2462</th>\n      <td>322</td>\n      <td>1</td>\n      <td>2011-12-28</td>\n      <td>1</td>\n      <td>1250</td>\n      <td>1250</td>\n      <td>Synapse Disc Tiagra</td>\n      <td>Road</td>\n      <td>Endurance Road</td>\n      <td>Aluminum</td>\n      <td>Phoenix Bi-peds</td>\n      <td>Phoenix</td>\n      <td>AZ</td>\n    </tr>\n    <tr>\n      <th>2463</th>\n      <td>322</td>\n      <td>2</td>\n      <td>2011-12-28</td>\n      <td>1</td>\n      <td>2660</td>\n      <td>2660</td>\n      <td>Bad Habit 2</td>\n      <td>Mountain</td>\n      <td>Trail</td>\n      <td>Aluminum</td>\n      <td>Phoenix Bi-peds</td>\n      <td>Phoenix</td>\n      <td>AZ</td>\n    </tr>\n    <tr>\n      <th>2464</th>\n      <td>322</td>\n      <td>3</td>\n      <td>2011-12-28</td>\n      <td>1</td>\n      <td>2340</td>\n      <td>2340</td>\n      <td>F-Si 1</td>\n      <td>Mountain</td>\n      <td>Cross Country Race</td>\n      <td>Aluminum</td>\n      <td>Phoenix Bi-peds</td>\n      <td>Phoenix</td>\n      <td>AZ</td>\n    </tr>\n    <tr>\n      <th>2465</th>\n      <td>322</td>\n      <td>4</td>\n      <td>2011-12-28</td>\n      <td>1</td>\n      <td>5860</td>\n      <td>5860</td>\n      <td>Synapse Hi-Mod Dura Ace</td>\n      <td>Road</td>\n      <td>Endurance Road</td>\n      <td>Carbon</td>\n      <td>Phoenix Bi-peds</td>\n      <td>Phoenix</td>\n      <td>AZ</td>\n    </tr>\n  </tbody>\n</table>\n<p>2466 rows × 13 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n# Example 1 - Summarize by time with a DataFrame object, pandas engine\n(\n    df\n        .summarize_by_time(\n            date_column  = 'order_date',\n            value_column = 'total_price',\n            freq         = \"MS\",\n            agg_func     = ['mean', 'sum'],\n            engine       = 'pandas'\n        )\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>order_date</th>\n      <th>total_price_mean</th>\n      <th>total_price_sum</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2011-01-01</td>\n      <td>4600.142857</td>\n      <td>483015</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2011-02-01</td>\n      <td>4611.408730</td>\n      <td>1162075</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2011-03-01</td>\n      <td>5196.653543</td>\n      <td>659975</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2011-04-01</td>\n      <td>4533.846154</td>\n      <td>1827140</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2011-05-01</td>\n      <td>4097.912621</td>\n      <td>844170</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2011-06-01</td>\n      <td>4544.839228</td>\n      <td>1413445</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2011-07-01</td>\n      <td>4976.791667</td>\n      <td>1194430</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2011-08-01</td>\n      <td>4961.970803</td>\n      <td>679790</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2011-09-01</td>\n      <td>4682.298851</td>\n      <td>814720</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2011-10-01</td>\n      <td>3930.053476</td>\n      <td>734920</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>2011-11-01</td>\n      <td>4768.175355</td>\n      <td>1006085</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>2011-12-01</td>\n      <td>4186.902655</td>\n      <td>473120</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n# Example 2 - Summarize by time with a GroupBy object (Wide Format), polars engine\n(\n    df\n        .groupby(['category_1', 'frame_material'])\n        .summarize_by_time(\n            date_column  = 'order_date',\n            value_column = ['total_price', 'quantity'],\n            freq         = 'MS',\n            agg_func     = 'sum',\n            wide_format  = True,\n            engine       = 'polars'\n        )\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>order_date</th>\n      <th>total_price_Mountain_Aluminum</th>\n      <th>total_price_Mountain_Carbon</th>\n      <th>total_price_Road_Aluminum</th>\n      <th>total_price_Road_Carbon</th>\n      <th>quantity_Mountain_Aluminum</th>\n      <th>quantity_Mountain_Carbon</th>\n      <th>quantity_Road_Aluminum</th>\n      <th>quantity_Road_Carbon</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2011-01-01</td>\n      <td>66290</td>\n      <td>155200</td>\n      <td>61005</td>\n      <td>200520</td>\n      <td>34</td>\n      <td>23</td>\n      <td>30</td>\n      <td>41</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2011-02-01</td>\n      <td>245115</td>\n      <td>415440</td>\n      <td>100480</td>\n      <td>401040</td>\n      <td>118</td>\n      <td>68</td>\n      <td>52</td>\n      <td>93</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2011-03-01</td>\n      <td>82025</td>\n      <td>276830</td>\n      <td>63390</td>\n      <td>237730</td>\n      <td>41</td>\n      <td>46</td>\n      <td>33</td>\n      <td>54</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2011-04-01</td>\n      <td>340725</td>\n      <td>735250</td>\n      <td>197705</td>\n      <td>553460</td>\n      <td>164</td>\n      <td>130</td>\n      <td>104</td>\n      <td>144</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2011-05-01</td>\n      <td>160130</td>\n      <td>290310</td>\n      <td>127600</td>\n      <td>266130</td>\n      <td>93</td>\n      <td>53</td>\n      <td>75</td>\n      <td>81</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2011-06-01</td>\n      <td>183680</td>\n      <td>539360</td>\n      <td>174655</td>\n      <td>515750</td>\n      <td>96</td>\n      <td>91</td>\n      <td>82</td>\n      <td>142</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2011-07-01</td>\n      <td>186030</td>\n      <td>581710</td>\n      <td>98090</td>\n      <td>328600</td>\n      <td>94</td>\n      <td>91</td>\n      <td>53</td>\n      <td>82</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2011-08-01</td>\n      <td>119785</td>\n      <td>241470</td>\n      <td>65855</td>\n      <td>252680</td>\n      <td>53</td>\n      <td>34</td>\n      <td>36</td>\n      <td>69</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2011-09-01</td>\n      <td>100455</td>\n      <td>300670</td>\n      <td>78485</td>\n      <td>335110</td>\n      <td>59</td>\n      <td>47</td>\n      <td>36</td>\n      <td>77</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2011-10-01</td>\n      <td>105035</td>\n      <td>272300</td>\n      <td>83105</td>\n      <td>274480</td>\n      <td>61</td>\n      <td>43</td>\n      <td>42</td>\n      <td>71</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>2011-11-01</td>\n      <td>102045</td>\n      <td>447300</td>\n      <td>90050</td>\n      <td>366690</td>\n      <td>55</td>\n      <td>79</td>\n      <td>51</td>\n      <td>95</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>2011-12-01</td>\n      <td>111125</td>\n      <td>164930</td>\n      <td>45555</td>\n      <td>151510</td>\n      <td>55</td>\n      <td>27</td>\n      <td>27</td>\n      <td>43</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# Example 3 - Summarize by time with a GroupBy object (Wide Format)\n(\n    df\n        .groupby('category_1')\n        .summarize_by_time(\n            date_column  = 'order_date',\n            value_column = 'total_price',\n            freq         = 'MS',\n            agg_func     = 'sum',\n            wide_format  = True,\n            engine       = 'pandas'\n        )\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>order_date</th>\n      <th>total_price_Mountain</th>\n      <th>total_price_Road</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2011-01-01</td>\n      <td>221490</td>\n      <td>261525</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2011-02-01</td>\n      <td>660555</td>\n      <td>501520</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2011-03-01</td>\n      <td>358855</td>\n      <td>301120</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2011-04-01</td>\n      <td>1075975</td>\n      <td>751165</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2011-05-01</td>\n      <td>450440</td>\n      <td>393730</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2011-06-01</td>\n      <td>723040</td>\n      <td>690405</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2011-07-01</td>\n      <td>767740</td>\n      <td>426690</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2011-08-01</td>\n      <td>361255</td>\n      <td>318535</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2011-09-01</td>\n      <td>401125</td>\n      <td>413595</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2011-10-01</td>\n      <td>377335</td>\n      <td>357585</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>2011-11-01</td>\n      <td>549345</td>\n      <td>456740</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>2011-12-01</td>\n      <td>276055</td>\n      <td>197065</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# Example 4 - Summarize by time with a GroupBy object and multiple value columns and summaries (Wide Format)\n# Note - This example only works with the pandas engine\n(\n    df\n        .groupby('category_1')\n        .summarize_by_time(\n            date_column  = 'order_date',\n            value_column = ['total_price', 'quantity'],\n            freq         = 'MS',\n            agg_func     = [\n                'sum',\n                'mean',\n                ('q25', lambda x: x.quantile(0.25)),\n                ('q75', lambda x: x.quantile(0.75))\n            ],\n            wide_format  = False,\n            engine       = 'pandas'\n        )\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>category_1</th>\n      <th>order_date</th>\n      <th>total_price_sum</th>\n      <th>total_price_mean</th>\n      <th>total_price_q25</th>\n      <th>total_price_q75</th>\n      <th>quantity_sum</th>\n      <th>quantity_mean</th>\n      <th>quantity_q25</th>\n      <th>quantity_q75</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Mountain</td>\n      <td>2011-01-01</td>\n      <td>221490</td>\n      <td>4922.000000</td>\n      <td>2060.0</td>\n      <td>6070.0</td>\n      <td>57</td>\n      <td>1.266667</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Mountain</td>\n      <td>2011-02-01</td>\n      <td>660555</td>\n      <td>4374.536424</td>\n      <td>2060.0</td>\n      <td>5330.0</td>\n      <td>186</td>\n      <td>1.231788</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Mountain</td>\n      <td>2011-03-01</td>\n      <td>358855</td>\n      <td>5882.868852</td>\n      <td>2130.0</td>\n      <td>6390.0</td>\n      <td>87</td>\n      <td>1.426230</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Mountain</td>\n      <td>2011-04-01</td>\n      <td>1075975</td>\n      <td>4890.795455</td>\n      <td>2060.0</td>\n      <td>5970.0</td>\n      <td>294</td>\n      <td>1.336364</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Mountain</td>\n      <td>2011-05-01</td>\n      <td>450440</td>\n      <td>4549.898990</td>\n      <td>2010.0</td>\n      <td>6020.0</td>\n      <td>146</td>\n      <td>1.474747</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Mountain</td>\n      <td>2011-06-01</td>\n      <td>723040</td>\n      <td>5021.111111</td>\n      <td>1950.0</td>\n      <td>5647.5</td>\n      <td>187</td>\n      <td>1.298611</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Mountain</td>\n      <td>2011-07-01</td>\n      <td>767740</td>\n      <td>5444.964539</td>\n      <td>2130.0</td>\n      <td>6400.0</td>\n      <td>185</td>\n      <td>1.312057</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Mountain</td>\n      <td>2011-08-01</td>\n      <td>361255</td>\n      <td>5734.206349</td>\n      <td>2235.0</td>\n      <td>6400.0</td>\n      <td>87</td>\n      <td>1.380952</td>\n      <td>1.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Mountain</td>\n      <td>2011-09-01</td>\n      <td>401125</td>\n      <td>5077.531646</td>\n      <td>1620.0</td>\n      <td>6390.0</td>\n      <td>106</td>\n      <td>1.341772</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Mountain</td>\n      <td>2011-10-01</td>\n      <td>377335</td>\n      <td>4439.235294</td>\n      <td>2160.0</td>\n      <td>6070.0</td>\n      <td>104</td>\n      <td>1.223529</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Mountain</td>\n      <td>2011-11-01</td>\n      <td>549345</td>\n      <td>5282.163462</td>\n      <td>2340.0</td>\n      <td>7460.0</td>\n      <td>134</td>\n      <td>1.288462</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Mountain</td>\n      <td>2011-12-01</td>\n      <td>276055</td>\n      <td>5208.584906</td>\n      <td>2060.0</td>\n      <td>6400.0</td>\n      <td>82</td>\n      <td>1.547170</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Road</td>\n      <td>2011-01-01</td>\n      <td>261525</td>\n      <td>4358.750000</td>\n      <td>1950.0</td>\n      <td>5605.0</td>\n      <td>71</td>\n      <td>1.183333</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Road</td>\n      <td>2011-02-01</td>\n      <td>501520</td>\n      <td>4965.544554</td>\n      <td>1950.0</td>\n      <td>5860.0</td>\n      <td>145</td>\n      <td>1.435644</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Road</td>\n      <td>2011-03-01</td>\n      <td>301120</td>\n      <td>4562.424242</td>\n      <td>2240.0</td>\n      <td>5875.0</td>\n      <td>87</td>\n      <td>1.318182</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Road</td>\n      <td>2011-04-01</td>\n      <td>751165</td>\n      <td>4104.726776</td>\n      <td>1950.0</td>\n      <td>4800.0</td>\n      <td>248</td>\n      <td>1.355191</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Road</td>\n      <td>2011-05-01</td>\n      <td>393730</td>\n      <td>3679.719626</td>\n      <td>1570.0</td>\n      <td>3500.0</td>\n      <td>156</td>\n      <td>1.457944</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>Road</td>\n      <td>2011-06-01</td>\n      <td>690405</td>\n      <td>4134.161677</td>\n      <td>1840.0</td>\n      <td>4500.0</td>\n      <td>224</td>\n      <td>1.341317</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>Road</td>\n      <td>2011-07-01</td>\n      <td>426690</td>\n      <td>4310.000000</td>\n      <td>1895.0</td>\n      <td>5330.0</td>\n      <td>135</td>\n      <td>1.363636</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Road</td>\n      <td>2011-08-01</td>\n      <td>318535</td>\n      <td>4304.527027</td>\n      <td>1950.0</td>\n      <td>4987.5</td>\n      <td>105</td>\n      <td>1.418919</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>Road</td>\n      <td>2011-09-01</td>\n      <td>413595</td>\n      <td>4353.631579</td>\n      <td>1950.0</td>\n      <td>5330.0</td>\n      <td>113</td>\n      <td>1.189474</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>Road</td>\n      <td>2011-10-01</td>\n      <td>357585</td>\n      <td>3505.735294</td>\n      <td>1750.0</td>\n      <td>4260.0</td>\n      <td>113</td>\n      <td>1.107843</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>Road</td>\n      <td>2011-11-01</td>\n      <td>456740</td>\n      <td>4268.598131</td>\n      <td>1950.0</td>\n      <td>4370.0</td>\n      <td>146</td>\n      <td>1.364486</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>Road</td>\n      <td>2011-12-01</td>\n      <td>197065</td>\n      <td>3284.416667</td>\n      <td>1652.5</td>\n      <td>3200.0</td>\n      <td>70</td>\n      <td>1.166667</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "summarize_by_time_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}