{
  "hash": "64eff6e7c9c3b432a118d0b77180f654",
  "result": {
    "markdown": "---\ntitle: make_weekend_sequence\n---\n\n\n\n```python\nmake_weekend_sequence(\n    start_date,\n    end_date,\n    friday_saturday=False,\n    remove_holidays=False,\n    country=None,\n    engine='pandas',\n)\n```\n\nGenerate a sequence of weekend dates within a specified date range,\noptionally excluding holidays.\n\n## Parameters {.doc-section .doc-section-parameters}\n\n| Name            | Type                                | Description                                                                                                                                                                                                                                                                                                                                   | Default    |\n|-----------------|-------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|\n| start_date      | str or datetime or pd.DatetimeIndex | The start date of the date range.                                                                                                                                                                                                                                                                                                             | _required_ |\n| end_date        | str or datetime or pd.DatetimeIndex | The end date of the date range.                                                                                                                                                                                                                                                                                                               | _required_ |\n| friday_saturday | bool                                | If True, generates a sequence with Friday and Saturday as weekends. If False (default), generates a sequence with Saturday and Sunday as weekends.                                                                                                                                                                                            | `False`    |\n| remove_holidays | bool                                | If True, excludes holidays (based on the specified country) from the generated sequence. If False (default), includes holidays in the sequence.                                                                                                                                                                                               | `False`    |\n| country         | str                                 | The name of the country for which to generate holiday-specific sequences. Defaults to None, which uses the United States as the default country.                                                                                                                                                                                              | `None`     |\n| engine          | str                                 | The `engine` parameter is used to specify the engine to use for generating a weekend series. It can be either \"pandas\" or \"polars\".  - The default value is \"pandas\".  - When \"polars\", the function will internally use the `polars` library   for generating a weekend series. This can be faster than using   \"pandas\" for large datasets. | `'pandas'` |\n\n## Returns {.doc-section .doc-section-returns}\n\n| Name   | Type   | Description                                                                                      |\n|--------|--------|--------------------------------------------------------------------------------------------------|\n|        | Series | A Series containing the generated weekend dates. The concrete type matches the requested engine. |\n\n## Examples {.doc-section .doc-section-examples}\n\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport pytimetk as tk\n\n# United States has Saturday and Sunday as weekends\ntk.make_weekend_sequence(\"2023-01-01\", \"2023-01-31\",\n                         friday_saturday = False,\n                         remove_holidays = True,\n                         country         = 'UnitedStates',\n                         engine          = 'pandas')\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n0   2023-01-07\n1   2023-01-08\n2   2023-01-14\n3   2023-01-15\n4   2023-01-21\n5   2023-01-22\n6   2023-01-28\n7   2023-01-29\nName: Weekend Dates, dtype: datetime64[ns]\n```\n:::\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n# Saudi Arabia has Friday and Saturday as weekends\ntk.make_weekend_sequence(\"2023-01-01\", \"2023-01-31\",\n                         friday_saturday = True,\n                         remove_holidays = True,\n                         country         = 'SaudiArabia',\n                         engine          = 'pandas')\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n0   2023-01-06\n1   2023-01-07\n2   2023-01-13\n3   2023-01-14\n4   2023-01-20\n5   2023-01-21\n6   2023-01-27\n7   2023-01-28\nName: Weekend Dates, dtype: datetime64[ns]\n```\n:::\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n# Saudi Arabia has Friday and Saturday as weekends (polars engine)\ntk.make_weekend_sequence(\"2023-01-01\", \"2023-01-31\",\n                         friday_saturday = True,\n                         remove_holidays = True,\n                         country         = 'SaudiArabia',\n                         engine          = 'polars')\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (8,)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>Weekend Dates</th></tr><tr><td>object</td></tr></thead><tbody><tr><td>2023-01-06 00:00:00</td></tr><tr><td>2023-01-07 00:00:00</td></tr><tr><td>2023-01-13 00:00:00</td></tr><tr><td>2023-01-14 00:00:00</td></tr><tr><td>2023-01-20 00:00:00</td></tr><tr><td>2023-01-21 00:00:00</td></tr><tr><td>2023-01-27 00:00:00</td></tr><tr><td>2023-01-28 00:00:00</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "make_weekend_sequence_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}