# augment_lags { #pytimetk.augment_lags }

```python
augment_lags(
    data,
    date_column,
    value_column,
    lags=1,
    reduce_memory=False,
    engine='pandas',
)
```

Adds lags to a Pandas DataFrame or DataFrameGroupBy object.

The `augment_lags` function takes a Pandas DataFrame or GroupBy object, a 
date column, a value column or list of value columns, and a lag or list of 
lags, and adds lagged versions of the value columns to the DataFrame.

## Parameters {.doc-section .doc-section-parameters}

| Name         | Type                                                     | Description                                                                                                                                                                                                                                                                                                                                                                                                                                  | Default    |
|--------------|----------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|
| data         | pd.DataFrame or pd.core.groupby.generic.DataFrameGroupBy | The `data` parameter is the input DataFrame or DataFrameGroupBy object  that you want to add lagged columns to.                                                                                                                                                                                                                                                                                                                              | _required_ |
| date_column  | str                                                      | The `date_column` parameter is a string that specifies the name of the  column in the DataFrame that contains the dates. This column will be  used to sort the data before adding the lagged values.                                                                                                                                                                                                                                         | _required_ |
| value_column | str or list                                              | The `value_column` parameter is the column(s) in the DataFrame that you  want to add lagged values for. It can be either a single column name  (string) or a list of column names.                                                                                                                                                                                                                                                           | _required_ |
| lags         | int or tuple or list                                     | The `lags` parameter is an integer, tuple, or list that specifies the  number of lagged values to add to the DataFrame.   - If it is an integer, the function will add that number of lagged    values for each column specified in the `value_column` parameter.   - If it is a tuple, it will generate lags from the first to the second    value (inclusive).   - If it is a list, it will generate lags based on the values in the list. | `1`        |
| engine       | str                                                      | The `engine` parameter is used to specify the engine to use for  augmenting lags. It can be either "pandas" or "polars".   - The default value is "pandas".  - When "polars", the function will internally use the `polars` library    for augmenting lags. This can be faster than using "pandas" for large    datasets.                                                                                                                    | `'pandas'` |

## Returns {.doc-section .doc-section-returns}

| Name   | Type         | Description                                         |
|--------|--------------|-----------------------------------------------------|
|        | pd.DataFrame | A Pandas DataFrame with lagged columns added to it. |

## Examples {.doc-section .doc-section-examples}

```{python}
import pandas as pd
import pytimetk as tk

df = tk.load_dataset('m4_daily', parse_dates=['date'])
df
```

```{python}
# Example 1 - Add 7 lagged values for a single DataFrame object, pandas engine
lagged_df_single = (
    df 
        .query('id == "D10"')
        .augment_lags(
            date_column='date',
            value_column='value',
            lags=(1, 7),
            engine='pandas'
        )
)
lagged_df_single
```
```{python}
# Example 2 - Add a single lagged value of 2 for each GroupBy object, polars engine
lagged_df = (
    df 
        .groupby('id')
        .augment_lags(
            date_column='date',
            value_column='value',
            lags=(1, 3),
            engine='polars'
        )
)
lagged_df
```

```{python}
# Example 3 add 2 lagged values, 2 and 4, for a single DataFrame object, pandas engine
lagged_df_single_two = (
    df 
        .query('id == "D10"')
        .augment_lags(
            date_column='date',
            value_column='value',
            lags=[2, 4],
            engine='pandas'
        )
)
lagged_df_single_two
```