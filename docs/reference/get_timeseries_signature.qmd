# get_timeseries_signature { #pytimetk.get_timeseries_signature }

```python
get_timeseries_signature(idx, reduce_memory=False, engine='auto')
```

Convert a timestamp to a set of 29 time series features.

The function `get_timeseries_signature` engineers **29 different date and
time based features** from a single datetime index `idx`:

## Parameters {.doc-section .doc-section-parameters}

| Name          | Type         | Description                                                                                                                                                                                                                                                                                                                                 | Default    |
|---------------|--------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|
| idx           | pd.Series    | The `idx` parameter is a pandas Series or DatetimeIndex.                                                                                                                                                                                                                                                                                     | _required_ |
| reduce_memory | bool         | The `reduce_memory` parameter is used to specify whether to reduce the memory usage of the DataFrame by converting int, float to smaller bytes and str to categorical data. This reduces memory for large data but may impact resolution of float and will change str to categorical. Default is False.                                     | `False`    |
| engine        | str          | Execution engine: use `'pandas'`, `'polars'`, or `'auto'` (default) to infer from the input.                                                                                                                                                                                                                                                 | `'auto'`   |

## Returns {.doc-section .doc-section-returns}

| Name   | Type                                                                                              | Description                                               |
|--------|---------------------------------------------------------------------------------------------------|-----------------------------------------------------------|
|        | DataFrame                                                                                         | DataFrame with 29 datetime features added, matching the requested backend. |
|        | - _index_num: An int64 feature that captures the entire datetime as a numeric value to the second |                                                           |
|        | - _year: The year of the datetime                                                                 |                                                           |
|        | - _year_iso: The iso year of the datetime                                                         |                                                           |
|        | - _yearstart: Logical (0,1) indicating if first day of year (defined by frequency)                |                                                           |
|        | - _yearend: Logical (0,1) indicating if last day of year (defined by frequency)                   |                                                           |
|        | - _leapyear: Logical (0,1) indicating if the date belongs to a leap year                          |                                                           |
|        | - _half: Half year of the date: Jan-Jun = 1, July-Dec = 2                                         |                                                           |
|        | - _quarter: Quarter of the date: Jan-Mar = 1, Apr-Jun = 2, Jul-Sep = 3, Oct-Dec = 4               |                                                           |
|        | - _quarteryear: Quarter of the date + relative year                                               |                                                           |
|        | - _quarterstart: Logical (0,1) indicating if first day of quarter (defined by frequency)          |                                                           |
|        | - _quarterend: Logical (0,1) indicating if last day of quarter (defined by frequency)             |                                                           |
|        | - _month: The month of the datetime                                                               |                                                           |
|        | - _month_lbl: The month label of the datetime                                                     |                                                           |
|        | - _monthstart: Logical (0,1) indicating if first day of month (defined by frequency)              |                                                           |
|        | - _monthend: Logical (0,1) indicating if last day of month (defined by frequency)                 |                                                           |
|        | - _yweek: The week ordinal of the year                                                            |                                                           |
|        | - _mweek: The week ordinal of the month                                                           |                                                           |
|        | - _wday: The number of the day of the week with Monday=1, Sunday=6                                |                                                           |
|        | - _wday_lbl: The day of the week label                                                            |                                                           |
|        | - _mday: The day of the datetime                                                                  |                                                           |
|        | - _qday: The days of the relative quarter                                                         |                                                           |
|        | - _yday: The ordinal day of year                                                                  |                                                           |
|        | - _weekend: Logical (0,1) indicating if the day is a weekend                                      |                                                           |
|        | - _hour: The hour of the datetime                                                                 |                                                           |
|        | - _minute: The minutes of the datetime                                                            |                                                           |
|        | - _second: The seconds of the datetime                                                            |                                                           |
|        | - _msecond: The microseconds of the datetime                                                      |                                                           |
|        | - _nsecond: The nanoseconds of the datetime                                                       |                                                           |
|        | - _am_pm: Half of the day, AM = ante meridiem, PM = post meridiem                                 |                                                           |

## Examples {.doc-section .doc-section-examples}

```{python}
import pandas as pd
import pytimetk as tk

dates = pd.date_range(start = '2019-01', end = '2019-03', freq = 'D')
```

```{python}
# Makes 29 new time series features from the dates
tk.get_timeseries_signature(dates).glimpse()
```

```{python}
import polars as pl
import pytimetk.polars_namespace

(
    pl.from_pandas(pd.DataFrame({'date': dates}))
        .select('date')
        .tk.get_timeseries_signature()
        .glimpse()
)
```
```{python}
pd.Series(dates, name = "date").get_timeseries_signature().glimpse()
```

```{python}
(
    pl.Series(dates, name="date")
        .to_frame()
        .tk.get_timeseries_signature()
        .glimpse()
)
```
