# augment_ewma_volatility { #pytimetk.augment_ewma_volatility }

```python
augment_ewma_volatility(
    data,
    date_column,
    close_column,
    decay_factor=0.94,
    window=20,
    reduce_memory=False,
    engine='pandas',
)
```

Calculate Exponentially Weighted Moving Average (EWMA) volatility for a financial time series.

## Parameters {.doc-section .doc-section-parameters}

| Name          | Type                                                            | Description                                                                                                                                                                                                                                                        | Default    |
|---------------|-----------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|
| data          | Union\[pd.DataFrame, pd.core.groupby.generic.DataFrameGroupBy\] | Input pandas DataFrame or GroupBy object with time series data.                                                                                                                                                                                                    | _required_ |
| date_column   | str                                                             | Column name containing dates or timestamps.                                                                                                                                                                                                                        | _required_ |
| close_column  | str                                                             | Column name with closing prices to calculate volatility.                                                                                                                                                                                                           | _required_ |
| decay_factor  | float                                                           | Smoothing factor (lambda) for EWMA, between 0 and 1. Higher values give more weight to past data. Default is 0.94 (RiskMetrics standard).                                                                                                                          | `0.94`     |
| window        | Union\[int, Tuple\[int, int\], List\[int\]\]                    | Size of the rolling window to initialize EWMA calculation. For each window value the EWMA volatility is only computed when at least that many observations are available.  You may provide a single integer or multiple values (via tuple or list). Default is 20. | `20`       |
| reduce_memory | bool                                                            | If True, reduces memory usage before calculation. Default is False.                                                                                                                                                                                                | `False`    |
| engine        | str                                                             | Computation engine: 'pandas' or 'polars'. Default is 'pandas'.                                                                                                                                                                                                     | `'pandas'` |

## Returns {.doc-section .doc-section-returns}

| Name   | Type         | Description                                                                                                                                                                   |
|--------|--------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|        | pd.DataFrame | DataFrame with added columns: - {close_column}_ewma_vol_{window}_{decay_factor}: EWMA volatility calculated using a minimum number of periods equal to each specified window. |

## Notes {.doc-section .doc-section-notes}

EWMA volatility emphasizes recent price movements and is computed recursively as:

    σ²_t = (1 - λ) * r²_t + λ * σ²_{t-1}

where r_t is the log return. By using the `min_periods` (set to the provided window value) we ensure that the EWMA is only calculated after enough observations have accumulated.

References:

- https://www.investopedia.com/articles/07/ewma.asp

## Examples {.doc-section .doc-section-examples}

```{python}
import pandas as pd
import pytimetk as tk

df = tk.load_dataset("stocks_daily", parse_dates = ['date'])

# Example 1 - Calculate EWMA volatility for a single stock

df.query("symbol == 'AAPL'").augment_ewma_volatility(
    date_column='date',
    close_column='close',
    decay_factor=0.94,
    window=[20, 50]
).glimpse()
```

```{python}
# Example 2 - Calculate EWMA volatility for multiple stocks
df.groupby('symbol').augment_ewma_volatility(
    date_column='date',
    close_column='close',
    decay_factor=0.94,
    window=[20, 50]
).glimpse()
```

```{python}
# Example 3 - Calculate EWMA volatility using Polars engine
df.query("symbol == 'AAPL'").augment_ewma_volatility(
    date_column='date',
    close_column='close',
    decay_factor=0.94,
    window=[20, 50],
    engine='polars'
).glimpse()
```

```{python}
# Example 4 - Calculate EWMA volatility for multiple stocks using Polars engine

df.groupby('symbol').augment_ewma_volatility(
    date_column='date',
    close_column='close',
    decay_factor=0.94,
    window=[20, 50],
    engine='polars'
).glimpse()
```