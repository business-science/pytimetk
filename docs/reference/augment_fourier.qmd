# augment_fourier { #pytimetk.augment_fourier }

```python
augment_fourier(
    data,
    date_column,
    periods=1,
    max_order=1,
    reduce_memory=True,
    engine='auto',
)
```

Adds Fourier transforms to a Pandas DataFrame or DataFrameGroupBy object.

The `augment_fourier` function takes a Pandas DataFrame or GroupBy object, a date column, a value column or list of value columns, the number of periods for the Fourier series, and the maximum Fourier order, and adds Fourier-transformed columns to the DataFrame.

## Parameters {.doc-section .doc-section-parameters}

| Name          | Type                                                     | Description                                                                                                                                                                                                                                                                                             | Default    |
|---------------|----------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|
| data          | DataFrame or GroupBy (pandas or polars)                  | The input tabular data to enrich with Fourier-transformed columns. Works with pandas or polars DataFrames as well as grouped objects.                                                                                                                                                                     | _required_ |
| date_column   | str                                                      | The `date_column` parameter is a string that specifies the name of the column in the DataFrame that contains the dates. This column will be used to compute the Fourier transforms.                                                                                                                     | _required_ |
| periods       | int or list                                              | The `periods` parameter specifies how many timesteps between each peak in the fourier series. Default is 1.                                                                                                                                                                                             | `1`        |
| max_order     | int                                                      | The `max_order` parameter specifies the maximum Fourier order to calculate. Default is 1.                                                                                                                                                                                                               | `1`        |
| reduce_memory | bool                                                     | Specify whether to reduce the memory usage of the DataFrame by converting numeric columns to smaller dtypes and strings to categoricals. Only supported for pandas data.                                                                                                                                  | `True`     |
| engine        | str                                                      | Execution engine: use `'pandas'`, `'polars'`, or `'auto'` (default) to infer from the input.                                                                                                                                                                                                              | `'auto'`   |

## Returns {.doc-section .doc-section-returns}

| Name   | Type         | Description                                                      |
|--------|--------------|------------------------------------------------------------------|
|        | DataFrame    | DataFrame with Fourier-transformed columns added, matching the input backend. |

## Examples {.doc-section .doc-section-examples}

```{python}
import pandas as pd
import pytimetk as tk

df = tk.load_dataset('m4_daily', parse_dates=['date'])

# Example 1 - Add Fourier transforms for a single column
fourier_df = (
    df
        .query("id == 'D10'")
        .augment_fourier(
            date_column='date',
            periods=[1, 7],
            max_order=1
        )
)
fourier_df.head()

fourier_df.plot_timeseries("date", "date_sin_1_7", x_axis_date_labels = "%B %d, %Y",)
```

``` {python}
# Example 2 - Add Fourier transforms for grouped data (pandas)
fourier_df = (
    df
        .groupby("id")
        .augment_fourier(
            date_column='date',
            periods=[1, 7],
            max_order=1,
        )
)
fourier_df
```

``` {python}
# Example 3 - Add Fourier transforms for grouped data (polars accessor)
import polars as pl
import pytimetk.polars_namespace

fourier_pl = (
    pl.from_pandas(df)
        .group_by("id")
        .tk.augment_fourier(
            date_column='date',
            periods=[1, 7],
            max_order=1,
        )
)
fourier_pl
```
