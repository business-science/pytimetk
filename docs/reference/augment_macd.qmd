# augment_macd { #pytimetk.augment_macd }

```python
augment_macd(
    data,
    date_column,
    close_column,
    fast_period=12,
    slow_period=26,
    signal_period=9,
    reduce_memory=False,
    engine='pandas',
)
```

Calculate MACD for a given financial instrument using either pandas or polars engine.

## Parameters {.doc-section .doc-section-parameters}

| Name          | Type                                                            | Description                                                                   | Default    |
|---------------|-----------------------------------------------------------------|-------------------------------------------------------------------------------|------------|
| data          | Union\[pd.DataFrame, pd.core.groupby.generic.DataFrameGroupBy\] | Pandas DataFrame or GroupBy object containing financial data.                 | _required_ |
| date_column   | str                                                             | Name of the column containing date information.                               | _required_ |
| close_column  | str                                                             | Name of the column containing closing price data.                             | _required_ |
| fast_period   | int                                                             | Number of periods for the fast EMA in MACD calculation.                       | `12`       |
| slow_period   | int                                                             | Number of periods for the slow EMA in MACD calculation.                       | `26`       |
| signal_period | int                                                             | Number of periods for the signal line EMA in MACD calculation.                | `9`        |
| reduce_memory | bool                                                            | Whether to reduce memory usage of the data before performing the calculation. | `False`    |
| engine        | str                                                             | Computation engine to use ('pandas' or 'polars').                             | `'pandas'` |

## Returns {.doc-section .doc-section-returns}

| Name   | Type         | Description                                                      |
|--------|--------------|------------------------------------------------------------------|
|        | pd.DataFrame | DataFrame with MACD line, signal line, and MACD histogram added. |

## Notes {.doc-section .doc-section-notes}

The MACD (Moving Average Convergence Divergence) is a 
trend-following momentum indicator that shows the relationship 
between two moving averages of a security’s price. Developed by
Gerald Appel in the late 1970s, the MACD is one of the simplest
and most effective momentum indicators available.

MACD Line: The MACD line is the difference between two 
exponential moving averages (EMAs) of a security’s price, 
typically the 12-day and 26-day EMAs.

Signal Line: This is usually a 9-day EMA of the MACD line. It
acts as a trigger for buy and sell signals.

Histogram: The MACD histogram plots the difference between the
MACD line and the signal line. A histogram above zero indicates
that the MACD line is above the signal line (bullish), and 
below zero indicates it is below the signal line (bearish).

Crossovers: The most common MACD signals are when the MACD line
crosses above or below the signal line. A crossover above the 
signal line is a bullish signal, indicating it might be time to
buy, and a crossover below the signal line is bearish, 
suggesting it might be time to sell.

## Examples {.doc-section .doc-section-examples}

``` {python}
import pandas as pd
import pytimetk as tk

df = tk.load_dataset("stocks_daily", parse_dates = ['date'])

df
```

``` {python}
# MACD pandas engine
df_macd = (
    df
        .groupby('symbol')
        .augment_macd(
            date_column = 'date', 
            close_column = 'close', 
            fast_period = 12, 
            slow_period = 26, 
            signal_period = 9, 
            engine = "pandas"
        )
)

df_macd.glimpse()
```

``` {python}
# MACD polars engine
df_macd = (
    df
        .groupby('symbol')
        .augment_macd(
            date_column = 'date', 
            close_column = 'close', 
            fast_period = 12, 
            slow_period = 26, 
            signal_period = 9, 
            engine = "polars"
        )
)

df_macd.glimpse()
```